# src/dependencies.py
# Fun√ß√£o: Central de Requisi√ß√µes do Restaurante - Como os funcion√°rios pedem acesso aos recursos

from fastapi import Depends, HTTPException
from services.redis_service import RedisService
from services.presence_service import PresenceService
from services.sync_service import SyncService
from services.cache_service import CacheService
from services.cloudinary_service import CloudinaryService
from services.firebase_service import FirebaseService
from services.notification_service import NotificationService
from services.music_generation_service import MusicGenerationService
from database.database import get_database

def get_redis_service():
    """Ma√Ætre D' fornece acesso √† Central El√©trica (Redis)"""
    from main import app
    if not hasattr(app.state, 'redis_service'):
        raise HTTPException(status_code=500, detail="‚ùå Central El√©trica (Redis) n√£o est√° funcionando!")
    print("‚ö°Ô∏è Funcion√°rio solicitou acesso √† Central El√©trica (Redis)")
    return app.state.redis_service

def get_presence_service():
    """Ma√Ætre D' fornece acesso ao Gerente de Sal√£o (Presence)"""
    from main import app
    if not hasattr(app.state, 'presence_service'):
        raise HTTPException(status_code=500, detail="‚ùå Gerente de Sal√£o (Presence) n√£o est√° dispon√≠vel!")
    print("üë• Funcion√°rio solicitou acesso ao Gerente de Sal√£o (Presence)")
    return app.state.presence_service

def get_cache_service():
    """Ma√Ætre D' fornece acesso ao Gerente do Buffet (Cache)"""
    from main import app
    if not hasattr(app.state, 'cache_service'):
        raise HTTPException(status_code=500, detail="‚ùå Gerente do Buffet (Cache) n√£o est√° dispon√≠vel!")
    print("üçΩÔ∏è Funcion√°rio solicitou acesso ao Gerente do Buffet (Cache)")
    return app.state.cache_service

def get_sync_service():
    """Ma√Ætre D' fornece acesso ao Sistema de Comandas (Sync)"""
    from main import app
    if not hasattr(app.state, 'sync_service'):
        raise HTTPException(status_code=500, detail="‚ùå Sistema de Comandas (Sync) n√£o est√° funcionando!")
    print("üìã Funcion√°rio solicitou acesso ao Sistema de Comandas (Sync)")
    return app.state.sync_service

def get_cloudinary_service():
    """Ma√Ætre D' fornece acesso ao Fot√≥grafo (Cloudinary)"""
    from main import app
    if not hasattr(app.state, 'cloudinary_service'):
        raise HTTPException(status_code=500, detail="‚ùå Fot√≥grafo (Cloudinary) n√£o est√° dispon√≠vel!")
    print("üì∏ Funcion√°rio solicitou acesso ao Fot√≥grafo (Cloudinary)")
    return app.state.cloudinary_service

def get_notification_service():
    """Ma√Ætre D' fornece acesso ao Painel de Avisos (Notification)"""
    from main import app
    if not hasattr(app.state, 'notification_service'):
        raise HTTPException(status_code=500, detail="‚ùå Painel de Avisos (Notification) n√£o est√° funcionando!")
    print("üì¢ Funcion√°rio solicitou acesso ao Painel de Avisos (Notification)")
    return app.state.notification_service

def get_music_generation_service():
    """Ma√Ætre D' fornece acesso √† Cozinha (Music Generation)"""
    from main import app
    if not hasattr(app.state, 'music_generation_service'):
        raise HTTPException(status_code=500, detail="‚ùå Cozinha (Music Generation) n√£o est√° funcionando!")
    print("üç≥ Funcion√°rio solicitou acesso √† Cozinha (Music Generation)")
    return app.state.music_generation_service
