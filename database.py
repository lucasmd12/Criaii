# src/database.py
import os
import motor.motor_asyncio
from dotenv import load_dotenv

# Carrega as vari√°veis de ambiente para garantir que a URI do Mongo esteja dispon√≠vel
load_dotenv()

MONGO_DB_URI = os.getenv("MONGO_DB_URI")

if not MONGO_DB_URI:
    raise Exception("‚ùå A vari√°vel de ambiente MONGO_DB_URI n√£o foi definida!")

class Database:
    def __init__(self):
        self.client = None
        self.db = None

    def connect(self):
        print("üîå Conectando ao MongoDB Atlas...")
        try:
            self.client = motor.motor_asyncio.AsyncIOMotorClient(MONGO_DB_URI)
            # O nome do banco de dados √© geralmente parte da URI, mas podemos definir um padr√£o
            self.db = self.client.get_database("alquimista_musical_db") 
            print("‚úÖ MongoDB Atlas conectado com sucesso!")
        except Exception as e:
            print(f"‚ùå Falha ao conectar ao MongoDB: {e}")
            self.client = None
            self.db = None
    
    def disconnect(self):
        if self.client:
            self.client.close()
            print("üîå Conex√£o com o MongoDB fechada.")

# Cria uma inst√¢ncia √∫nica que ser√° usada em toda a aplica√ß√£o
db_connection = Database()

# Exporta a vari√°vel 'db' que ser√° o objeto do banco de dados ap√≥s a conex√£o
# Inicialmente ser√° None, mas ser√° preenchida no startup do FastAPI
db = None
